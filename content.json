{"meta":{"title":"Hexo","subtitle":"","description":"","author":"John Doe","url":"http://example.com","root":"/"},"pages":[],"posts":[{"title":"python使用总结","slug":"python使用总结","date":"2021-01-09T14:20:08.000Z","updated":"2021-01-10T02:41:06.851Z","comments":true,"path":"2021/01/09/python使用总结/","link":"","permalink":"http://example.com/2021/01/09/python%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/","excerpt":"","text":"python使用总结 python执行ubuntu terminal命令 12import os os.system(&#39;&lt;ubuntu 命令&gt;&#39;) 在执行ubuntu terminal命令时，如果需要切换路径： 1os.chdir(&#39;&lt;路径名称&gt;&#39;)","categories":[],"tags":[]},{"title":"ubuntu使用总结","slug":"ubuntu使用总结","date":"2021-01-09T08:21:12.000Z","updated":"2021-01-10T02:44:46.361Z","comments":true,"path":"2021/01/09/ubuntu使用总结/","link":"","permalink":"http://example.com/2021/01/09/ubuntu%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/","excerpt":"","text":"ubuntu 使用总结 ubuntu查看环境变量有三个命令 1、env env命令是environment的缩zhi写，用dao于列出所zhuan有的环境变量 2、export 单独使用export命令也可以像env列出所有的环境变量，不过export命令还有其他额外的功能 3、echo $PATH echo $PATH用于列出变量PATH的值，里面包含了已添加的目录 ubuntu修改环境变量： 1、使用set命令 set查看所有本地定义的环境变量，unset可以删除指定的环境变量。 2、使用export命令 export &lt;变量名称&gt;=$&lt;变量名称&gt;:&lt;变量值&gt; //等号两边一定不能有空格 3、修改.bashrc文件 12345vi ~&#x2F;.bashrc &#x2F;&#x2F;编辑.bashrc文件 &#x2F;&#x2F;在最后一行添上: export &lt;变量名称&gt;&#x3D;$&lt;变量名称&gt;:&lt;变量值&gt; &#x2F;&#x2F;等号两边没空格 &#x2F;&#x2F;保存退出source ~&#x2F;.bashrc 注意，常用的环境变量： PATH 决定了shell将到哪些目录中寻找命令或程序 HOME 当前用户主目录 HISTSIZE 历史记录数 LOGNAME 当前用户的登录名 HOSTNAME 指主机的名称 SHELL 当前用户Shell类型 LANGUGE 语言相关的环境变量，多语言可以修改此环境变量 MAIL 当前用户的邮件存放目录 PS1 基本提示符，对于root用户是#，对于普通用户是$ ubuntu中&gt;和&gt;&gt;和&lt;的区别 1、输入输出的区bai别： &gt;&gt;和&gt;都属于输出重定向，&lt;属于输入重定向。 2、文件内容的区别： &gt;会覆盖目标的原有内容。当文件存在时会先删除原文件，再重新创建文件，然后把内容写入该文件；否则直接创建文件。 &gt;&gt;会在目标原有内容后追加内容。当文件存在时直接在文件末尾进行内容追加，不会删除原文件；否则直接创建文件。","categories":[],"tags":[]},{"title":"git使用总结","slug":"git使用总结","date":"2021-01-09T08:18:40.000Z","updated":"2021-01-10T02:48:15.671Z","comments":true,"path":"2021/01/09/git使用总结/","link":"","permalink":"http://example.com/2021/01/09/git%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/","excerpt":"","text":"git 使用总结 git log --stat的使用 1、显示最近一次被修改文件的修改：统计信息，添加或删除了多少行。 git log -1 --stat 2、显示最近两条的修改 git log --stat -2 3、显示具体的修改 git log -p -2 4、显示用户为czd的修改 git log --stat --author=czd 5、查看单个文件sensor-dev.c最近三次修改的记录 git log --stat -3 drivers/input/sensors/sensor-dev.c 6、如果想不分页输出全部log日志 git --no-pager log 当使用git --no-pager log --stat &gt;&gt; temp.txt出现以下报错信息时： 12warning: inexact rename detection was skipped due to too many files.warning: you may want to set your diff.renameLimit variable to at least 6567 and retry the command. 修改git的diff.renameLimit变量值 1git config diff.renameLimit 2000000","categories":[],"tags":[]},{"title":"ubuntu服务器-Nginx初步配置及站点部署","slug":"ubuntu服务器-Nginx初步配置及站点部署","date":"2021-01-08T01:51:13.000Z","updated":"2021-01-08T02:11:46.155Z","comments":true,"path":"2021/01/08/ubuntu服务器-Nginx初步配置及站点部署/","link":"","permalink":"http://example.com/2021/01/08/ubuntu%E6%9C%8D%E5%8A%A1%E5%99%A8-Nginx%E5%88%9D%E6%AD%A5%E9%85%8D%E7%BD%AE%E5%8F%8A%E7%AB%99%E7%82%B9%E9%83%A8%E7%BD%B2/","excerpt":"","text":"ubuntu服务器-Nginx初步配置及站点部署 使用SSH远程登录服务器 1ssh root@***.***.***.*** 安装Nginx并启动服务器 123apt updateapt install nginxsystemctl start nginx 将项目上传到服务器 可以选择本地上传或者 github clone。 编辑默认的default root /var默认路径，并将代码移动至路径下。 12345cd &#x2F;etc&#x2F;nginx&#x2F;sites-availablevim default(rewrite) root &#x2F;var&#x2F;www&#x2F;sitescd &#x2F;var&#x2F;wwwmv &lt;code path&gt; sites 检测nginx配置文件，重启nginx服务器 12nginx -tservice nginx restart","categories":[],"tags":[]},{"title":"基于Github和Hexo搭建个人网站","slug":"website-based-github-hexo","date":"2021-01-06T12:13:18.000Z","updated":"2021-01-07T02:19:57.950Z","comments":true,"path":"2021/01/06/website-based-github-hexo/","link":"","permalink":"http://example.com/2021/01/06/website-based-github-hexo/","excerpt":"","text":"基于Github和Hexo搭建个人网站 安装并配置 Git Git 是目前世界上最先进的分布式版本控制系统（没有之一）,使用 Git 的目的是为了将网站从本地提交上服务器（GitHub）上面去。具体的 Git 操作细节可以查看廖雪峰的教程，讲的十分详细。 在终端进行操作，设置 user.name 和 user.email 配置信息，为了方便推荐设置为全局。 12git config --global user.name &quot;GitHub账号名称&quot;git config --global user.email &quot;GitHub注册邮箱&quot; ** 通过注册的邮箱生成 ssh 密钥文件： 1ssh-keygen -t rsa -C &quot;GitHub注册邮箱&quot; 直接三个回车，默认不需要设置密码。最后得到了两个文件： id_rsa 和 id_rsa.pub。打开 id_rsa.pub 文件，将里面的内容全部复制到 Github 上。添加 SSH key 后，进行测试。 1ssh -T git@github.com 你将会看到： 123The authenticity of host &#39;github.com (207.97.227.239)&#39; can&#39;t be established.RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.Are you sure you want to continue connecting (yes&#x2F;no)? 选择yes后 1Hi ***! You&#39;ve successfully authenticated, but GitHub does not provide shell access. 新建一个 Github 仓库，仓库名为：&lt;github账号名称&gt;.github.io 安装Node.js可以根据自己的系统自行搜索安装方法，ubuntu 上的安装方法为：1sudo apt-get install nodejs 安装并配置 Hexo Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。 1sudo npm install -g hexo-cli 初始化博客 1hexo init myBlog 进入myBlog文件夹中，输入 1hexo server 或者1hexo s 打开浏览器输入地址：1localhost:4000 这样就可以看见博客了。 添加文章(1) 可以将你平时写的文章直接导入到 _posts 文件夹里，注意文章类型得是 md 格式。(2) 可以写新文章，执行以下命令 1hexo new [layout] &lt;title&gt; 可以在命令中指定文章的布局（layout），默认为 post，可以通过修改 _config.yml 中的 default_layout 参数来指定默认布局。 生成静态网页 1hexo generate 或者1hexo g 将网页部署到 Github 上Hexo 提供了快速方便的一键部署功能，只需一条命令就能将网站部署到服务器上。在开始之前，必须先在 _config.yml 中修改参数，一个正确的部署配置中至少要有 type 参数，例如：1234deploy: type: git repo: https:&#x2F;&#x2F;github.com&#x2F;***&#x2F;***.github.io branch: master 之后输入以下命令：1hexo deploy 或者1hexo d 稍等片刻，网站就已经部署好了，可以在浏览器输入 ***.github.io，这样一个免费的博客就已经搭建好了。 选择主题Hexo 默认的主题比较一般，可以在Hexo的主题网站进行主题的挑选更换。将下好的主题安放在themes文件夹内，同时在_config.yml中进行主题修改就好了。一般每个主题都会有比较详细的说明文档，按照文档进行修改即可。","categories":[],"tags":[]}],"categories":[],"tags":[]}